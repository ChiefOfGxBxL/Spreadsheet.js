{
  "name": "Spreadsheet.js",
  "tagline": "A small javascript library for creating spreadsheet style tables",
  "body": "# Spreadsheet.js\r\n_A small javascript library for creating spreadsheet style tables_\r\n\r\n\r\n## Features\r\n * Create tables, large and small\r\n * Columns labeled by letters (A,B,...,AA,...ZZ); rows labeled with line numbers\r\n * Add new columns and rows\r\n * Easily select cells by spreadsheet-style names (A5, G15, etc.)\r\n * Tab through cells to quickly edit them in succession\r\n * Attach event-handlers to table and cell events\r\n\r\n\r\n## Usage\r\n#### Creating a table\r\n```html\r\n<link rel='stylesheet' type='text/css' href='Spreadsheet.css'/>\r\n<script src='Spreadsheet.js'></script>\r\n```\r\n```javascript\r\nvar container = document.getElementById(\"container\"); // have a div handy to hold the table\r\nmyTable = new Spreadsheet({\r\n    rows: 5,\r\n    cols: 10,\r\n    context: container,\r\n    onCellValueChanged: function(cell, old, newv) {\r\n        console.log(old + '->' + newv);\r\n    }\r\n});\r\n```\r\nBy default, cells will not be filled in with any data. If you'd like it to add some random numbers 0-9, set `autofill` to true.\r\n\r\n![](https://github.com/ChiefOfGxBxL/Spreadsheet.js/blob/master/screenshots/Spreadsheet_Basic.PNG)\r\n\r\n#### Options\r\nBelow are all of the options that can be specified when creating a spreadsheet, including event-handlers and table information. **Options preceded by an asterisk (*) are required**!\r\n```javascript\r\noptions: {\r\n    *rows: <Integer>,\r\n    *cols: <Integer>,\r\n    *context: <HTMLElement>,\r\n    \r\n    autofill: <Boolean>,\r\n    \r\n    // Event-handlers\r\n    onCellValueChanged: <function(<HTMLElement> cell, <String> oldValue, <String> newValue)>,\r\n    onCellClick: <function(<HTMLElement> cell)>,\r\n    onCellDblClick: <function(<HTMLElement> cell)>,\r\n    onCellFocused: <function(<HTMLElement> cell)>,\r\n    onNewRow: <function()>,\r\n    onNewCol: <function()>\r\n}\r\n```\r\n\r\n#### Select a cell\r\n```javascript\r\nmyTable.selectCell(0,0); // select the cell in the top-left most corner\r\nmyTable._(\"G7\"); // select the cell in column G, row 7\r\n```\r\nNote that when selecting cells, you may only select \"content cells\". That is, it is not possible to select the header cells marked by letters or the row numberings. These are included with .getRows and .getCols, however:\r\n\r\n#### Select all rows / columns\r\n```javascript\r\nmyTable.getRows();\r\nmyTable.getCols();\r\n```\r\n\r\n#### Size of table\r\nThese should be self-explanatory\r\n```javascript\r\nmyTable.getRowCount();\r\nmyTable.getColCount();\r\nmyTable.getSize(); // returns a duple: [row,col]\r\n```\r\n\r\n#### Edit a cell\r\nSimply __click__ the cell and type something in.\r\nSkip to the next cell using your 'Tab' key, or 'Shift-Tab' to go back a cell:\r\n\r\n![](https://github.com/ChiefOfGxBxL/Spreadsheet.js/blob/master/screenshots/Spreadsheet_Tab.png)\r\n\r\n## Contributing\r\nHelp would be greatly appreciated. Feel free to grab a task from the issue tracker, or suggest your own improvement!\r\n\r\nCreate a fork of this repository, claim some issues and work on them, and then submit a merge request!\r\n\r\n\r\n## License\r\nSpreadsheet.js is available under the [MIT License](http://opensource.org/licenses/MIT).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}